# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Env value
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/develop" ]]; then
            echo "Setting profile=dev"
            echo "profile=dev" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF" == "refs/heads/master" ]]; then
            echo "Setting profile=prod"
            echo "profile=prod" >> $GITHUB_ENV
          fi

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -P $profile -DskipTests

      - name: check jar
        run: |
          mkdir service
          cd target/
          mv *.jar ../service
          ls
          echo ---------------------------------------------------------------
          pwd
          cd ..
          ls
          echo ---------------------------------------------------------------
          cd /docker/$profile
          cp lifepost-service.Dockerfile ../../service
          cd ..
          cd ..
          zip -r service.zip service/


